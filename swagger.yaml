swagger: "2.0"
info:
  version: "1.0.0"
  title: Auth API
host: vuejs-flask-api.herokuapp.com
basePath: /users/
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /register:
      post:
        description: Registration the new user
        summary: Registration the new user
        consumes:
          - application/json
        parameters:
          - in: body
            name: user
            description: User's registration data.
            schema:
              type: object
              required:
                - username
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                file_name:
                  type: array
                  items:
                    type: string
        responses:
          "200":
            description: Registered
            schema:
              type: object
              properties:
                result:
                  type: string
          
  /login:
    post:
      description: Login the user
      summary: Login the user
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: User's data
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Logged in
          schema:
            type: object
            properties:
              token:
                type: string
                
  /checkUser:
      get:
        description: Check is user already exists
        summary: Check is user already exists
        operationId: GetOperation
        parameters:
        - name: username
          in: query
          description: username
          type: string
        responses:
          "200":
            description: Success
            schema:
              type: object
              properties:
                status:
                  type: string
                  
  /upload:
    post:
      description: Upload files to DB
      summary: Upload files to DB
      consumes:
        - multipart/form-data
      parameters:
        - in: body
          name: File
          description: File
          schema:
            type: object
            required:
              - username
            properties:
              file:
                type: object
              username:
                type: string
      responses:
        "200":
          description: upload file
          schema:
            type: object
            properties:
              status:
                type: string  
                
  /download:
    get:
      description: Download file from DB
      summary: Download file from BD
      consumes:
        - application/json
      parameters:
        - in: body
          name: file
          description: download file
          schema:
            type: object
            required:
              - file_name
            properties:
              file_name:
                type: string
              username:
                type: string
                  
      responses:
        "200":
          description: File downloaded
          schema:
            type: object
            properties:
              file:
                type: object  
        
  /updateData:
    post:
      description: Update user;s data
      summary: Update user's data
      consumes:
        - application/json
      parameters:
        - in: body
          name: file
          description: U  ploaded file
          schema:
            type: object
            required:
              - file_name
            properties:
              username:
                type: string
              file_name:
                type: string
                  
      responses:
        "200":
          description: Updated array of file names
          schema:
            type: object
            properties:
              file_name:
                type: array  
                items:
                  type: string
  /deleteFile:
    delete:
      description: Delete file from DB
      summary: Delete file from DB
      consumes:
        - application/json
      parameters:
        - in: body
          name: file
          description: File whith will be delete
          schema:
            type: object
            required: 
              - file_name
            properties:
              username:
                type: string
              file_name:
                type: string
                  
      responses:
        "200":
          description: File deleted
          schema:
            type: object
            properties:
              file_name:
                type: array
                items:
                  type: string
  /getFileName:
    get:
      description: Return all user's files
      summary: Return all user's files
      parameters:
      - name: username
        in: query
        description: username
        type: string
      responses:
        "200":
          description: All user's files
          schema:
            type: object
            properties:
              file_name:
                type: array
                items:
                  type: string